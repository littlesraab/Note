字符串的扩展

  Unicode表示法:1.可用\uxxxx表示一个字符,xxxx表示Unicode码点.
                2.范围是\u0000~\uFFFF之间,超出要用两个双字节的形式表示.
  
  codePointAt():1.用于处理4字节字符,返回字符的码点,该方法返回的码点为十进制.
                 2.参数为字符的起始位置,该方法也可用于测试一个字符为2字节还是4字节.
  
  formCodePoint():1.用于识别4字节码点,从码点返回对应字符.
                   2.有多个参数就会被合并成一个字符串返回.
  
  include(),startsWith(),endsWith():1.ES6为对应ES5的indexOf(),这3个方法都返回布尔值.
                                     2.include()返回是否找到参数字符串.
                                     3.startsWith()返回布尔值,表示参数字符串是否在原字符串的头部,参数是目标字符和开始搜索的位置.
                                     4.endsWith()返回布尔值,参数是目标字符和开始搜索的位置(从尾部开始),返回字符串是否在源字符串尾部.
                                    
  repeat():1.返回一个新字符串,表示将原字符串重复n次.
           2.参数是重复的次数,会自动取整.
           3.若参数是字符串,会自动转为数字.
  
  模板字符串:1.用反引号"`"标识,它可以当作普通字符串使用,也可以用来定义多行字符串,或者在字符串中嵌入变量.
            2.如果在模板字符串中用"`",则前面要用反斜杠转义(\).
            3.若用模板字符串表示多行字符串,所有的空格和缩进都会被保留,但可用trim()消除.
            4.若模板字符串中嵌入变量,需要将变量名写在"${}"之中,大括号内部可以放入任意的JS表达式,可以进行运算及引用对象属性和调用函数,若大括号中的值不是
              字符串,将按照一般的规则转为字符串.
            5.模板字符串还能嵌套
            
  标签模板:1.即模板字符串放在一个函数后面,函数会处理这个模板字符串.
           2.标签模板其实不是模板,而是函数调用的一种特殊形式,"标签"指的就是函数,紧跟在后面的模板字符串就是它的参数(alert`123` 等于 alert(123)).
           3.如果模板字符里面有变量,会将模板字符串先处理成多个参数,再调用函数,而对应的参数是第一个参数是模板字符串中没有转化的部分形成的数组,后面的参数
             是需要转化的部分,即每有一个"${}",函数就多一个输入的参数.
             
  String.raw():1.用来充当模板字符串的处理函数,返回一个斜杠都被转义(斜杠前面再加一个斜杠)的字符串,对应于替换变量后的模板字符串.
               2.可以作为处理模板字符串的基本方法,它会将所有变量替换且对斜杠进行转义,方便下一步作为字符串来使用.
               3.也可以作为正常的函数使用,它的第一个参数是一个具有raw属性的对象,且raw属性的值应该是一个数组
                 (例;String.raw({ raw: ['t','e','s','t'] }, 0, 1, 2); //'t0e1s2t').
