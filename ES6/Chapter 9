Symbol
  概述:1.为ES6引入的原始数据类型,表示独一无二的值,凡是属性名属于Symbol类型就都是独一无二的.
       2.Symbol值通过Symbol函数生成,Symbol函数前不能使用new命令,否则会报错.
       3.Symbol值不是对象,所以不能添加属性,它是一种类似于字符串的数据类型.
       4.Symbol函数可以接受一个字符串作为参数,表示对Symbol实例的描述,主要是为了在控制台显示或者转为字符串时比较容易区分.
       5.Symbol值不能与其他类型的值进行运算,会报错.
       6.Symbol值可以显式转为字符串和布尔值.
  
  作为属性名的Symbol:1.每个Symbol值都是不相等的,所以Symbol值可以作为标识符.
                    2.用于对象的属性名,就能保证不会出现同名的属性.
                    3.Symbol 值作为对象属性名时,不能用点运算符,会被认作字符串,所以在对象的内部使用Symbol值定义属性时必须放在方括号之中.
  
  属性名的遍历:1.Symbol作为属性名是不会出现在for...in、for...of循环中,也不会被Object.keys()、Object.getOwnPropertyNames()、JSON.stringify()返回.
              2.但它不是私有属性,可用Object.getOwnPropertySymbols()获取指定对象的所有Symbol属性名.
              3.Object.getOwnPropertySymbols()返回一个数组,成员是当前对象的所有用作属性名的Symbol值.
  
  Symbol.for(),Symbol.keyFor():1.Symbol.for()接受一个字符串作为参数,然后搜索有没有以该参数为名称的Symbol值,如果有就返回这个Symbol值,否则就新建并返回
                                 一个以该字符串为名称的Symbol值.
                               2.Symbol.for()为Symbol值登记的名字是全局环境的.
                               2.Symbol.keyFor()返回一个已登记的Symbol类型值的key,是全局环境的.
  
  内置的Symbol值:ES6提供了11个内置的Symbol值.
