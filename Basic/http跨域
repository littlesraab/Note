http跨域
  1.跨域是指不同域名之间的互相访问(即A网站视图访问B网站),因为要遵守同源策略(要求两个网站协议,域名,端口相同才能提交或获取内容),体现为Cookie,localstorage
    和IndexDB无法读取,dom无法获取,ajax不能发送.
    (http:(协议)//www(二域).baidu(一域).com:8000(端口))
    1.协议/端口的跨域不能通过前端解决.
    2.方法
      1.docuemnt.domain + iframe(要主域相同)(iframe为元素,为内联框架),要用document.domian来指明两个文件有相同的域名.
        JS
          (www.a.com/a.html)
          document.domain = 'a.com';
          var ifr = document.createElement('iframe');
          ifr.src = 'http://www.script.a.com/b.html';
          ifr.display = none;
          document.body.appendChild(ifr);
          ifr.onload = function(){
             var doc = ifr.contentDocument || ifr.contentWindow.document;
             //在这里操作doc，也就是b.html
             ifr.onload = null;
          };
          
          (www.script.a.com/b.html)
          document.domain = 'a.com';
      2.动态创建script,script不受同源策略限制.
        JS
          function loadScript(url, func) {
            var head = document.head || document.getElementByTagName('head')[0];
            var script = document.createElement('script');
            
            script.src = url;
            script.onload = script.onreadystatechange = function(){
              if(!this.readyState || this.readyState=='loaded' || this.readyState=='complete'){
                 func();
                 script.onload = script.onreadystatechange = null;
              }
            };
            head.insertBefore(script, 0);
          }
          
          window.baidu = {
            sug: function(data){
               console.log(data);
            }
          }
          loadScript('http://suggestion.baidu.com/su?wd=w',function(){console.log('loaded')});
      3.location.hash + iframe,原理是利用location.hash来进行传值.
      4.window.name + iframe,window.name值在不同的页面(甚至不同域名(加载后依旧存在,并且可以支持非常长的name值(2MB).
      5.postMessage(为html5引入的API),允许来自不同源的脚本用异步方式进行有限通信,实现跨文档多窗口跨域传递.
        1.postMessage(data,origin)
          1.data为要传递的数据,出于兼容问题,最好用JSON.stringfty()处理.
          2.orgin为字符串参数,指明目标窗口的源,为(协议+主机+端口号).
        2.postMessage只把message传给指定窗口(用"/"),用"*"号是为任意窗口.
        HTML
          (a.com/index.html)
          <iframe id="ifr" src="b.com/index.html"></iframe>
            <script type="text/javascript">
              window.onload = function() {
                var ifr = document.getElementById('ifr');
                var targetOrigin = 'http://b.com';  // 若写成'http://b.com/c/proxy.html'效果一样
                                                    // 若写成'http://c.com'就不会执行postMessage了
                ifr.contentWindow.postMessage('I was there!', targetOrigin);
              };
            </script>
         
         (b.com/index.html)
         <script type="text/javascript">
            window.addEventListener('message', function(event){
            // 通过origin属性判断消息来源地址
               if (event.origin == 'http://a.com') {
                 alert(event.data);    // 弹出"I was there!"
                 alert(event.source);  // 对a.com、index.html中window对象的引用
                                       // 但由于同源策略，这里event.source不可以访问window对象
               }
             }, false);
          </script>
      6.JSONP
        1.JSONP包含两部分,回调函数和数据,回调函数是当响应到来时要放在当前页面被调用的函数,数据就是传入回调函数中的json数据,也就是回调函数的参数了.
        2.jsonp虽然很简单,但存在安全问题(请求代码中可能存在安全隐患),要确定jsonp请求是否失败并不容易.
        JS
          function handleResponse(response){
            console.log('The responsed data is: '+response.data);
          }
          var script = document.createElement('script');
          
          script.src = 'http://www.baidu.com/json/?callback=handleResponse';
          document.body.insertBefore(script, document.body.firstChild);
